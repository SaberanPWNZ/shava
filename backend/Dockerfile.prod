# Multi-stage build for production
FROM python:3.12-slim as builder

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        gcc \
        g++ \
        libpq-dev \
        build-essential && \
    rm -rf /var/lib/apt/lists/*


RUN pip install poetry

WORKDIR /app

COPY pyproject.toml poetry.lock* ./

ENV POETRY_NO_INTERACTION=1 \
    POETRY_VENV_IN_PROJECT=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

RUN poetry install --no-dev && rm -rf $POETRY_CACHE_DIR

FROM python:3.12-slim as production

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PATH="/app/.venv/bin:$PATH"

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        libpq5 \
        curl && \
    rm -rf /var/lib/apt/lists/*

RUN addgroup --system app && adduser --system --group app

WORKDIR /app

COPY --from=builder /app/.venv /app/.venv

COPY --chown=app:app . .


RUN mkdir -p /app/static /app/media && \
    chown -R app:app /app
USER app


EXPOSE 8000

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/admin/ || exit 1

CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]
